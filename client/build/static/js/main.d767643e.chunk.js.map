{"version":3,"sources":["mem2.js","load.js","mounted.js","UnMounted.js","DiskUsage.js","driveaudit.js","RingMD5.js","SwiftConfMD5.js","quarantined.js","sockstat.js","devices.js","async.js","replication_account.js","replication_container.js","replication_object.js","auditor_account.js","auditor_container.js","auditor_object.js","updater_container.js","updater_object.js","Object_expirer.js","version.js","time.js","side.js","sample.js","App.js","serviceWorker.js","index.js"],"names":["ldata","socket","require","RLoad","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","response_load","connectorx","bind","assertThisInitialized","_this2","emit","on","data","setState","forceUpdate","_this3","timer","setInterval","_this4","clearInterval","react_default","a","createElement","Grid","container","spacing","item","xs","Card","CardContent","Typography","color","gutterBottom","es","onElementsClick","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","options","scales","yAxes","ticks","beginAtZero","width","height","JSON","stringify","Component","RMem2","response_mem","connector","localStorage","setItem","aanon_i","getItem","aanon","parse","shift","push","parseInt","slice","length","afile_i","afile","iaanon_i","iaanon","iafile_i","iafile","fill","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","style","display","fontSize","margin","objx","Array","RMounted","response_mounted","x","items","map","obj","TableRow","TableCell","align","Paper","overflowX","Table","minWidth","TableHead","TableBody","RUnMounted","response_unmounted","RDiskUsage","response_diskusage","RDriveAudit","response_driveaudit","RRingMD5","response_ringmd5","RSwiftConfMD5","response_swiftconfmd5","RQuarantined","response_quarantined","RSockstat","response_sockstat","RDevices","response_devices","RAsync","response_async","RReplication_account","response_replication_account","RReplication_container","response_replication_container","RReplication_object","response_replication_object","RAuditor_account","response_auditor_account","RAuditor_container","response_auditor_container","RAuditor_object","response_auditor_object","RUpdater_Container","response_Updater_Container","RUpdater_Object","response_Updater_Object","RExpirer_Object","response_Expirer_Object","RVersion","response_version","RTime","response_time","ProfileTabs","props","handleChange","_","activeIndex","flexBasis","VerticalTabs","borderRight","borderBottom","value","onChange","MyTab","TabContainer","load","mem2","mounted","UnMounted","DiskUsage","driveaudit","RingMD5","SwiftConfMD5","quarantined","sockstat","devices","src_async","maxWidth","replication_account","replication_container","replication_object","auditor_account","auditor_container","auditor_object","updater_container","updater_object","Object_expirer","version","time","React","PureComponent","withStyles","theme","flexContainer","flexDirection","indicator","Tabs","selected","border","borderRadius","Tab","component","padding","children","useStyles","makeStyles","root","flexGrow","palette","background","paper","appBar","SimpleTabs","classes","_React$useState","useState","_React$useState2","slicedToArray","setValue","className","AppBar","position","event","newValue","Divider","sample_TabContainer","side","Home","sample","Boolean","window","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d767643e.chunk.js","sourcesContent":["/* eslint-disable no-array-constructor */\r\nimport 'chartjs-plugin-annotation'\r\nimport React, {Component} from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Line} from 'react-chartjs-2';\r\n\r\nlet socket = require('socket.io-client')('http://127.0.0.1:5000');\r\n\r\nvar ldata;\r\n\r\nclass RMem2 extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            response_mem: \"\"\r\n        };\r\n        this.connector = this.connector.bind(this)\r\n    }\r\n\r\n    componentWillMount() {\r\n        localStorage.setItem('aanon',JSON.stringify([0,0,0,0,0]));\r\n        localStorage.setItem('afile',JSON.stringify([0,0,0,0,0]));\r\n        localStorage.setItem('iaanon',JSON.stringify([0,0,0,0,0]));\r\n        localStorage.setItem('iafile',JSON.stringify([0,0,0,0,0]));\r\n        socket.emit('incoming data', '/mem');\r\n        socket.on(\"outgoing data\", data => this.setState({response_mem: data}, () => {\r\n            var aanon_i = localStorage.getItem('aanon')\r\n            var aanon = JSON.parse(aanon_i)\r\n            aanon.shift()\r\n            aanon.push(parseInt(((this.state.response_mem['Active(anon)']).slice(0,(this.state.response_mem['Active(anon)']).length-2)),10)/parseInt('1000'))\r\n            localStorage.setItem('aanon',JSON.stringify(aanon))\r\n\r\n            var afile_i = localStorage.getItem('afile')\r\n            var afile = JSON.parse(afile_i)\r\n            afile.shift()\r\n            afile.push(parseInt(((this.state.response_mem['Active(file)']).slice(0,(this.state.response_mem['Active(file)']).length-2)),10)/parseInt('1000'))\r\n            localStorage.setItem('afile',JSON.stringify(afile))\r\n\r\n            var iaanon_i = localStorage.getItem('iaanon')\r\n            var iaanon = JSON.parse(iaanon_i)\r\n            iaanon.shift()\r\n            iaanon.push(parseInt(((this.state.response_mem['Inactive(anon)']).slice(0,(this.state.response_mem['Inactive(anon)']).length-2)),10)/parseInt('1000'))\r\n            localStorage.setItem('iaanon',JSON.stringify(iaanon))\r\n\r\n            var iafile_i = localStorage.getItem('iafile')\r\n            var iafile = JSON.parse(iafile_i)\r\n            iafile.shift()\r\n            iafile.push(parseInt(((this.state.response_mem['Inactive(file)']).slice(0,(this.state.response_mem['Inactive(file)']).length-2)),10)/parseInt('1000'))\r\n            localStorage.setItem('iafile',JSON.stringify(iafile))\r\n\r\n            ldata = {\r\n                labels:['12 sec','9 sec','6 sec','3 sec','0 sec'],\r\n                datasets:[\r\n                {\r\n                data:JSON.parse(localStorage.getItem('aanon')),\r\n                label: 'Active anon',\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: 'rgb(153, 255, 102)',\r\n                borderColor: 'rgb(153, 255, 102)',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgb(0,0,0)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgb(0,0,0)',\r\n                pointHoverBorderColor: 'rgb(0,0,0)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10, \r\n              },\r\n              {\r\n                label: 'Active file',\r\n                data:JSON.parse(localStorage.getItem('afile')),\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: 'rgb(255, 204, 153)',\r\n                borderColor: 'rgb(255, 204, 153)',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgb(0,0,0)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgb(0,0,0)',\r\n                pointHoverBorderColor: 'rgb(0,0,0)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n              },\r\n              {\r\n                label: 'Inactive anon',\r\n                data:JSON.parse(localStorage.getItem('iaanon')),\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: 'rgb(255, 102, 153)',\r\n                borderColor: 'rgb(255, 102, 153)',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgb(0,0,0)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgb(0,0,0)',\r\n                pointHoverBorderColor: 'rgb(0,0,0)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n              },\r\n              {\r\n                label: 'Inactive file',\r\n                data:JSON.parse(localStorage.getItem('iafile')),\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: 'rgba(75,192,192,1)',\r\n                borderColor: 'rgba(75,192,192,1)',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgb(0,0,0)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgb(0,0,0)',\r\n                pointHoverBorderColor: 'rgb(0,0,0)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n              }\r\n            ]\r\n        }\r\n            this.forceUpdate()\r\n        })\r\n        )   \r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.timer = setInterval(\r\n            () => this.connector(), 3000\r\n        )\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this.timer)\r\n    }\r\n\r\n    connector(){\r\n        socket.emit('incoming data', '/mem');\r\n        socket.on(\"outgoing data\", data => this.setState({response_mem: data}, () => {\r\n            var aanon_i = localStorage.getItem('aanon')\r\n            var aanon = JSON.parse(aanon_i)\r\n            aanon.shift()\r\n            aanon.push(parseInt(((this.state.response_mem['Active(anon)']).slice(0,(this.state.response_mem['Active(anon)']).length-2)),10)/parseInt('1000'))\r\n            localStorage.setItem('aanon',JSON.stringify(aanon))\r\n\r\n            var afile_i = localStorage.getItem('afile')\r\n            var afile = JSON.parse(afile_i)\r\n            afile.shift()\r\n            afile.push(parseInt(((this.state.response_mem['Active(file)']).slice(0,(this.state.response_mem['Active(file)']).length-2)),10)/parseInt('1000'))\r\n            localStorage.setItem('afile',JSON.stringify(afile))\r\n\r\n            var iaanon_i = localStorage.getItem('iaanon')\r\n            var iaanon = JSON.parse(iaanon_i)\r\n            iaanon.shift()\r\n            iaanon.push(parseInt(((this.state.response_mem['Inactive(anon)']).slice(0,(this.state.response_mem['Inactive(anon)']).length-2)),10)/parseInt('1000'))\r\n            localStorage.setItem('iaanon',JSON.stringify(iaanon))\r\n\r\n            var iafile_i = localStorage.getItem('iafile')\r\n            var iafile = JSON.parse(iafile_i)\r\n            iafile.shift()\r\n            iafile.push(parseInt(((this.state.response_mem['Inactive(file)']).slice(0,(this.state.response_mem['Inactive(file)']).length-2)),10)/parseInt('1000'))\r\n            localStorage.setItem('iafile',JSON.stringify(iafile))\r\n\r\n            ldata = {\r\n                labels:['12 sec','9 sec','6 sec','3 sec','0 sec'],\r\n                datasets:[\r\n                {\r\n                data:JSON.parse(localStorage.getItem('aanon')),\r\n                label: 'Active anon',\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: 'rgb(153, 255, 102)',\r\n                borderColor: 'rgb(153, 255, 102)',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgb(0,0,0)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgb(0,0,0)',\r\n                pointHoverBorderColor: 'rgb(0,0,0)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10, \r\n              },\r\n              {\r\n                label: 'Active file',\r\n                data:JSON.parse(localStorage.getItem('afile')),\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: 'rgb(255, 204, 153)',\r\n                borderColor: 'rgb(255, 204, 153)',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgb(0,0,0)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgb(0,0,0)',\r\n                pointHoverBorderColor: 'rgb(0,0,0)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n              },\r\n              {\r\n                label: 'Inactive anon',\r\n                data:JSON.parse(localStorage.getItem('iaanon')),\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: 'rgb(255, 102, 153)',\r\n                borderColor: 'rgb(255, 102, 153)',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgb(0,0,0)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgb(0,0,0)',\r\n                pointHoverBorderColor: 'rgb(0,0,0)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n              },\r\n              {\r\n                label: 'Inactive file',\r\n                data:JSON.parse(localStorage.getItem('iafile')),\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: 'rgba(75,192,192,1)',\r\n                borderColor: 'rgba(75,192,192,1)',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgb(0,0,0)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgb(0,0,0)',\r\n                pointHoverBorderColor: 'rgb(0,0,0)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n              }\r\n            ]\r\n        }\r\n            this.forceUpdate()\r\n        })\r\n        )\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={10}>\r\n                <Card>\r\n                <CardContent style={{display: 'block',fontSize: '14',margin: '0 2px',}}>\r\n                <Typography  color=\"textSecondary\" gutterBottom>\r\n                    <Line  \r\n                        data={ldata}\r\n                        height={150}\r\n                        width={300}\r\n                    />\r\n                </Typography>\r\n                </CardContent>\r\n                </Card>\r\n            </Grid>\r\n            <Grid item xs={5}>\r\n                    <Card >\r\n                    <CardContent style={{display: 'block',fontSize: '14',margin: '0 2px',}}>\r\n                    <Typography  color=\"textSecondary\" gutterBottom>\r\n                        Active anon- {JSON.parse(localStorage.getItem('aanon'))[4]}<br/>\r\n                        Active file- {JSON.parse(localStorage.getItem('afile'))[4]}<br/>\r\n                        Inactive file- {JSON.parse(localStorage.getItem('iafile'))[4]}<br/>\r\n                        Inactive anon- {JSON.parse(localStorage.getItem('iaanon'))[4]}<br/>\r\n                    </Typography>\r\n                    </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        )  \r\n    }\r\n}\r\n\r\nexport default RMem2;\r\n","import {Bar} from 'react-chartjs-2'\r\nimport 'chartjs-plugin-annotation'\r\nimport React, {Component} from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nlet socket = require('socket.io-client')('http://127.0.0.1:5000');\r\n  \r\n\r\nclass RLoad extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            response_load: \"\",\r\n        }; \r\n        this.connectorx = this.connectorx.bind(this) \r\n    }\r\n\r\n    componentWillMount() {\r\n        socket.emit('incoming data', '/load');\r\n        socket.on(\"outgoing data\", data => this.setState({response_load: data}))\r\n        this.forceUpdate()   \r\n    }\r\n\r\n    componentDidMount(){\r\n        this.timer = setInterval(\r\n            () => this.connectorx(), 5000\r\n        )\r\n    }\r\n\r\n    connectorx(){\r\n        socket.emit('incoming data', '/load');\r\n        socket.on(\"outgoing data\", data => this.setState({response_load: data}))\r\n        this.forceUpdate()\r\n    }\r\n    \r\n    componentWillUnmount(){\r\n        clearInterval(this.timer)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid container spacing={1} >\r\n            <Grid item xs={7}>\r\n                <Card >\r\n                    <CardContent>\r\n                    <Typography  color=\"textSecondary\" gutterBottom>\r\n                    <Bar onElementsClick =  {this.connectorx}\r\n                    data={{\r\n                        labels:[\"1m\",\"5m\",\"15m\"],\r\n                        datasets:[{\r\n                        label: 'Average Load',\r\n                        data:[this.state.response_load['1m'],this.state.response_load['5m'],this.state.response_load['15m']],\r\n                        backgroundColor: 'rgba(255,99,132,0.2)',\r\n                        borderColor: 'rgba(255,99,132,1)',\r\n                        borderWidth: 1,\r\n                        hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n                        hoverBorderColor: 'rgba(255,99,132,1)',\r\n                      }]}\r\n                    }\r\n                    options={{\r\n                        scales: {\r\n                          yAxes: [{\r\n                            ticks: {\r\n                              beginAtZero: true\r\n                            }\r\n                          }]\r\n                        }\r\n                      }}\r\n                    width={300}\r\n                    height={300}\r\n                    />\r\n                    </Typography>\r\n                    </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Card >\r\n                    <CardContent>\r\n                    <Typography  color=\"textSecondary\" gutterBottom>\r\n                        Number of processes - {JSON.stringify(this.state.response_load['processes'])}<br/>\r\n                        Number of tasks - {JSON.stringify(this.state.response_load['tasks'])}\r\n                    </Typography>\r\n                    </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                </Grid>\r\n        )  \r\n    }\r\n}\r\n\r\nexport default RLoad;\r\n","/* eslint-disable no-array-constructor */\r\nimport React, {Component} from \"react\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nlet socket = require('socket.io-client')('http://127.0.0.1:5000');\r\nvar objx = new Array();\r\n\r\nclass RMounted extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            response_mounted: \"\",\r\n        };  \r\n    }\r\n\r\n    componentWillMount() {\r\n        socket.emit('incoming data', '/mounted');\r\n        socket.on(\"outgoing data\", data => this.setState({response_mounted: data}, () => {\r\n            this.forceUpdate()\r\n            objx = []\r\n            for(var x in this.state.response_mounted){\r\n                objx.push(this.state.response_mounted[x])         \r\n            }\r\n        }))        \r\n    }\r\n    \r\n    render() {\r\n        const items = objx.map((obj) => {\r\n            return(\r\n                    <TableRow >\r\n                        <TableCell align=\"left\"><Typography>{obj['device']}</Typography></TableCell>\r\n                        <TableCell align=\"right\"><Typography>{obj['path']}</Typography></TableCell>\r\n                    </TableRow>\r\n            )\r\n        })\r\n        return (\r\n            <div>\r\n                <div style = {{backgroundColor:'#212121', }}>\r\n                    <Paper style={{width: '100%',overflowX: 'auto',}}>\r\n                    <Table style ={{minWidth: 450,}}>\r\n                    <TableHead style={{backgroundColor:'black'}}>\r\n                        <TableRow>\r\n                            <TableCell style={{color:'white'}}><b>Device</b></TableCell>\r\n                            <TableCell align=\"right\"style={{color:'white'}}><b>Path</b></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {items}\r\n                    </TableBody>\r\n                    </Table>\r\n                    </Paper>    \r\n                </div>\r\n            </div>\r\n        )  \r\n    }\r\n}\r\n\r\nexport default RMounted;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","/* eslint-disable no-array-constructor */\r\nimport React, {Component} from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nlet socket = require('socket.io-client')('http://127.0.0.1:5000');\r\nvar objx = new Array();\r\n\r\nclass RUnMounted extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            response_unmounted: \"\",\r\n        };  \r\n    }\r\n\r\n    componentWillMount() {\r\n        socket.emit('incoming data', '/unmounted');\r\n        socket.on(\"outgoing data\", data => this.setState({response_unmounted: data}, () => {\r\n            this.forceUpdate()\r\n            objx = []\r\n            for(var x in this.state.response_unmounted){\r\n                objx.push(this.state.response_unmounted[x]['device'])         \r\n            }\r\n        }))        \r\n    }\r\n    \r\n    render() {\r\n        const items = objx.map((obj) => {\r\n            return(\r\n                <div>\r\n                    <div>device - {obj}</div>\r\n                </div>\r\n            )\r\n        })\r\n        return (\r\n            <div>\r\n                <div style = {{backgroundColor:'#212121' }}>\r\n                    <Card >\r\n                    <CardContent style={{display: 'inline-block',fontSize: '14',margin: '0 2px',}}>\r\n                    <Typography  color=\"textSecondary\" gutterBottom>\r\n                        {items}\r\n                    </Typography>\r\n                    </CardContent>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        )  \r\n    }\r\n}\r\n\r\nexport default RUnMounted;\r\n","/* eslint-disable no-array-constructor */\r\nimport React, {Component} from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nvar objx = new Array();\r\n\r\nlet socket = require('socket.io-client')('http://127.0.0.1:5000');\r\n\r\nclass RDiskUsage extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            response_diskusage: \"\",\r\n        };  \r\n    }\r\n\r\n    componentWillMount() {\r\n        socket.emit('incoming data', '/diskusage');\r\n        socket.on(\"outgoing data\", data => this.setState({response_diskusage: data}, () => {\r\n            this.forceUpdate()\r\n            objx = []\r\n            for(var x in this.state.response_diskusage){\r\n                objx.push(this.state.response_diskusage[x])         \r\n            }\r\n        }))        \r\n    }\r\n    \r\n    render() {\r\n        const items = objx.map((obj) => {\r\n            return(\r\n                <div>\r\n                    <div>\r\n                        device - {obj['device']}<br/> \r\n                        available - {JSON.stringify(obj['avail'])}<br/>\r\n                        mounted - {JSON.stringify(obj['mounted'])}<br/>\r\n                        used - {JSON.stringify(obj['used'])}<br/>\r\n                        size - {JSON.stringify(obj['size'])}<br/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n        return (\r\n            <div>\r\n                <div style = {{backgroundColor:'#212121' }}>\r\n                    <Card >\r\n                    <CardContent style={{display: 'inline-block',fontSize: '14',margin: '0 2px',}}>\r\n                    <Typography  color=\"textSecondary\" gutterBottom>\r\n                        {items}\r\n                    </Typography>\r\n                    </CardContent>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        )  \r\n    }\r\n}\r\n\r\nexport default RDiskUsage;\r\n","import React, {Component} from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nlet socket = require('socket.io-client')('http://127.0.0.1:5000');\r\n\r\nclass RDriveAudit extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            response_driveaudit: \"\",\r\n        };  \r\n    }\r\n\r\n    componentWillMount() {\r\n        socket.emit('incoming data', '/driveaudit');\r\n        socket.on(\"outgoing data\", data => this.setState({response_driveaudit: data}, () => {\r\n            this.forceUpdate()\r\n        }))        \r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style = {{backgroundColor:'#212121' }}>\r\n                    <Card >\r\n                    <CardContent style={{display: 'inline-block',fontSize: '14',margin: '0 2px',}}>\r\n                    <Typography  color=\"textSecondary\" gutterBottom>\r\n                        Drive audit errors - {JSON.stringify(this.state.response_driveaudit['drive_audit_errors'])}<br/>\r\n                    </Typography>\r\n                    </CardContent>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        )  \r\n    }\r\n}\r\n\r\nexport default RDriveAudit;\r\n","import React, {Component} from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nlet socket = require('socket.io-client')('http://127.0.0.1:5001');\r\n\r\nclass RRingMD5 extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            response_ringmd5: \"\",\r\n        };  \r\n    }\r\n\r\n    componentWillMount() {\r\n        socket.emit('incoming data', '/ringmd5');\r\n        socket.on(\"outgoing data\", data => this.setState({response_ringmd5: data}, () => {\r\n            this.forceUpdate()\r\n        }))        \r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style = {{backgroundColor:'#212121' }}>\r\n                    <Card >\r\n                    <CardContent style={{display: 'inline-block',fontSize: '14',margin: '0 2px',}}>\r\n                    <Typography  color=\"textSecondary\" gutterBottom>\r\n                        RingMD5 objects- {JSON.stringify(this.state.response_ringmd5['/etc/swift/object.ring.gz'])}<br/>\r\n                        RingMD5 accounts- {JSON.stringify(this.state.response_ringmd5['/etc/swift/account.ring.gz'])}<br/>\r\n                        RingMD5 containers- {JSON.stringify(this.state.response_ringmd5['/etc/swift/container.ring.gz'])}<br/>\r\n                    </Typography>\r\n                    </CardContent>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        )  \r\n    }\r\n}\r\n\r\nexport default RRingMD5;\r\n","import React, {Component} from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nlet socket = require('socket.io-client')('http://127.0.0.1:5001');\r\n\r\nclass RSwiftConfMD5 extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            response_swiftconfmd5: \"\",\r\n        };  \r\n    }\r\n\r\n    componentWillMount() {\r\n        socket.emit('incoming data', '/swiftconfmd5');\r\n        socket.on(\"outgoing data\", data => this.setState({response_swiftconfmd5: data}, () => {\r\n            this.forceUpdate()\r\n        }))        \r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n            <div style = {{backgroundColor:'#212121' }}>\r\n                    <Card >\r\n                    <CardContent style={{display: 'inline-block',fontSize: '14',margin: '0 2px',}}>\r\n                    <Typography  color=\"textSecondary\" gutterBottom>\r\n                        swiftconfMD5- {JSON.stringify(this.state.response_swiftconfmd5['/etc/swift/swift.conf'])}<br/>\r\n                    </Typography>\r\n                    </CardContent>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        )  \r\n    }\r\n}\r\n\r\nexport default RSwiftConfMD5;\r\n","import React, {Component} from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nlet socket = require('socket.io-client')('http://127.0.0.1:5001');\r\n\r\nclass RQuarantined extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            response_quarantined: \"\",\r\n        };  \r\n    }\r\n\r\n    componentWillMount() {\r\n        socket.emit('incoming data', '/quarantined');\r\n        socket.on(\"outgoing data\", data => this.setState({response_quarantined: data}, () => {\r\n            this.forceUpdate()\r\n        }))        \r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style = {{backgroundColor:'#212121' }}>\r\n                    <Card >\r\n                    <CardContent style={{display: 'inline-block',fontSize: '14',margin: '0 2px',}}>\r\n                    <Typography  color=\"textSecondary\" gutterBottom>\r\n                        Quarantined objects- {JSON.stringify(this.state.response_quarantined['objects'])}<br/>\r\n                        Quarantined accounts- {JSON.stringify(this.state.response_quarantined['accounts'])}<br/>\r\n                        Quarantined policies- {JSON.stringify(this.state.response_quarantined['policies'])}<br/>\r\n                        Quarantined containers- {JSON.stringify(this.state.response_quarantined['containers'])}<br/>\r\n                    </Typography>\r\n                    </CardContent>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        )  \r\n    }\r\n}\r\n\r\nexport default RQuarantined;\r\n","import React, {Component} from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nlet socket = require('socket.io-client')('http://127.0.0.1:5001');\r\n\r\nclass RSockstat extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            response_sockstat: \"\",\r\n        };  \r\n    }\r\n\r\n    componentWillMount() {\r\n        socket.emit('incoming data', '/sockstat');\r\n        socket.on(\"outgoing data\", data => this.setState({response_sockstat: data}, () => {\r\n            this.forceUpdate()\r\n        }))        \r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style = {{backgroundColor:'#212121' }}>\r\n                    <Card >\r\n                    <CardContent style={{display: 'inline-block',fontSize: '14',margin: '0 2px',}}>\r\n                    <Typography  color=\"textSecondary\" gutterBottom>\r\n                        time wait- {JSON.stringify(this.state.response_sockstat['time_wait'])}<br/>\r\n                        tcp in use - {JSON.stringify(this.state.response_sockstat['tcp_in_use'])}<br/>\r\n                        orphan - {JSON.stringify(this.state.response_sockstat['orphan'])}<br/>\r\n                        tcp6 in use - {JSON.stringify(this.state.response_sockstat['tcp6_in_use'])}<br/>\r\n                        tcp memory allocated bytes - {JSON.stringify(this.state.response_sockstat['tcp_mem_allocated_bytes'])}<br/>\r\n                    </Typography>\r\n                    </CardContent>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        )  \r\n    }\r\n}\r\n\r\nexport default RSockstat;\r\n","/* eslint-disable no-array-constructor */\r\nimport React, {Component} from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nlet socket = require('socket.io-client')('http://127.0.0.1:5001');\r\nvar objx = new Array();\r\n\r\n\r\nclass RDevices extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            response_devices: \"\",\r\n        };  \r\n    }\r\n\r\n    componentWillMount() {\r\n        socket.emit('incoming data', '/devices');\r\n        socket.on(\"outgoing data\", data => this.setState({response_devices: data}, () => {\r\n            this.forceUpdate()\r\n            objx = []\r\n            for(var x in this.state.response_devices){\r\n                objx.push(this.state.response_devices[x])         \r\n            }\r\n            \r\n        }))        \r\n    }\r\n    \r\n    render() {\r\n        const items = objx.map((obj) => {\r\n            return(\r\n                <div>\r\n                    <div>devices - {obj}</div>\r\n                </div>\r\n            )\r\n        })\r\n        return (\r\n            <div>\r\n                <div style = {{backgroundColor:'#212121' }}>\r\n                    <Card >\r\n                    <CardContent style={{display: 'inline-block',fontSize: '14',margin: '0 2px',}}>\r\n                    <Typography  color=\"textSecondary\" gutterBottom>\r\n                        {items}\r\n                    </Typography>\r\n                    </CardContent>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        )  \r\n    }\r\n}\r\n\r\nexport default RDevices;\r\n","import React, {Component} from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nlet socket = require('socket.io-client')('http://127.0.0.1:5001');\r\n\r\nclass RAsync extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            response_async: \"\",\r\n        };  \r\n    }\r\n\r\n    componentWillMount() {\r\n        socket.emit('incoming data', '/async');\r\n        socket.on(\"outgoing data\", data => this.setState({response_async: data}, () => {\r\n            this.forceUpdate()\r\n        }))        \r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style = {{backgroundColor:'#212121' }}>\r\n                    <Card >\r\n                    <CardContent style={{display: 'inline-block',fontSize: '14',margin: '0 2px',}}>\r\n                    <Typography  color=\"textSecondary\" gutterBottom>\r\n                        async pending - {JSON.stringify(this.state.response_async['async_pending'])}<br/>\r\n                    </Typography>\r\n                    </CardContent>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        )  \r\n    }\r\n}\r\n\r\nexport default RAsync;\r\n","/* eslint-disable no-array-constructor */\r\nimport React, {Component} from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nlet socket = require('socket.io-client')('http://127.0.0.1:5002');\r\nvar objx = new Array();\r\n\r\nclass RReplication_account extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            response_replication_account: \"\",\r\n        };  \r\n    }\r\n\r\n    componentWillMount() {\r\n        socket.emit('incoming data', '/replication/account');\r\n        socket.on(\"outgoing data\", data => this.setState({response_replication_account: data}, () => {\r\n            this.forceUpdate()\r\n            objx = []\r\n            objx.push(this.state.response_replication_account['replication_stats'])         \r\n            \r\n        }))        \r\n    }\r\n    \r\n    render() {\r\n        const items = objx.map((obj) => {\r\n            return(\r\n                <div>\r\n                    <div>\r\n                        no change - {obj['no_change']}<br/>\r\n                        rsync - {obj['rsync']}<br/>\r\n                        success - {obj['success']}<br/>\r\n                        start - {obj['start']}<br/>\r\n                        attempted - {obj['attempted']}<br/>\r\n                        ts_repl - {obj['ts_repl']}<br/>\r\n                        remove - {obj['remove']}<br/>\r\n                        remote_merge - {obj['remote_merge']}<br/>\r\n                        diff_capped - {obj['diff_capped']}<br/>\r\n                        failure - {obj['failure']}<br/>\r\n                        hashmatch - {obj['hashmatch']}<br/>\r\n                        diff - {obj['diff']}<br/>\r\n                        empty - {obj['empty']}<br/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n        return (\r\n                <div style = {{backgroundColor:'#212121' }}>\r\n                    <Card >\r\n                    <CardContent style={{display: 'inline-block',fontSize: '14',margin: '0 2px',}}>\r\n                    <Typography  color=\"textSecondary\" gutterBottom>\r\n                    <h3>account</h3>\r\n                    <b>Last replication</b> - {JSON.stringify(this.state.response_replication_account['replication_last'])}<br/>\r\n                    <b>Replication stats</b> -     \r\n                    {items}<br/>\r\n                    <b>Replication time</b> - {JSON.stringify(this.state.response_replication_account['replication_time'])} \r\n                    </Typography>\r\n                    </CardContent>\r\n                    </Card>\r\n                </div>\r\n                \r\n        )  \r\n    }\r\n}\r\n\r\nexport default RReplication_account;\r\n","/* eslint-disable no-array-constructor */\r\nimport React, {Component} from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\n\r\nlet socket = require('socket.io-client')('http://127.0.0.1:5002');\r\nvar objx = new Array();\r\n\r\nclass RReplication_container extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            response_replication_container: \"\",\r\n        };  \r\n    }\r\n\r\n    componentWillMount() {\r\n        socket.emit('incoming data', '/replication/container');\r\n        socket.on(\"outgoing data\", data => this.setState({response_replication_container: data}, () => {\r\n            this.forceUpdate()\r\n            objx = []\r\n            objx.push(this.state.response_replication_container['replication_stats'])         \r\n            \r\n        }))        \r\n    }\r\n    \r\n    render() {\r\n        const items = objx.map((obj) => {\r\n            return(\r\n                <div>\r\n                    <div>\r\n                        no change - {obj['no_change']}<br/>\r\n                        rsync - {obj['rsync']}<br/>\r\n                        success - {obj['success']}<br/>\r\n                        start - {obj['start']}<br/>\r\n                        attempted - {obj['attempted']}<br/>\r\n                        ts_repl - {obj['ts_repl']}<br/>\r\n                        remove - {obj['remove']}<br/>\r\n                        remote_merge - {obj['remote_merge']}<br/>\r\n                        diff_capped - {obj['diff_capped']}<br/>\r\n                        failure - {obj['failure']}<br/>\r\n                        hashmatch - {obj['hashmatch']}<br/>\r\n                        diff - {obj['diff']}<br/>\r\n                        empty - {obj['empty']}<br/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n        return (\r\n            <Grid container spacing={1}>\r\n            <Grid item xs={12}>\r\n                <div style = {{backgroundColor:'#212121' }}>\r\n                    <Card >\r\n                    <CardContent style={{display: 'inline-block',fontSize: '14',margin: '0 2px',}}>\r\n                    <Typography  color=\"textSecondary\" gutterBottom>\r\n                    <h3>container</h3>\r\n                    <b>Last replication</b> - {JSON.stringify(this.state.response_replication_container['replication_last'])}<br/>\r\n                    <b>Replication stats</b> -     \r\n                    {items}<br/>\r\n                    <b>Replication time</b> - {JSON.stringify(this.state.response_replication_container['replication_time'])} \r\n                    </Typography>\r\n                    </CardContent>\r\n                    </Card>\r\n                </div>\r\n                </Grid>\r\n            </Grid>\r\n        )  \r\n    }\r\n}\r\n\r\nexport default RReplication_container;\r\n","/* eslint-disable no-array-constructor */\r\nimport React, {Component} from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\n\r\nlet socket = require('socket.io-client')('http://127.0.0.1:5002');\r\nvar objx = new Array();\r\n\r\nclass RReplication_object extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            response_replication_object: \"\",\r\n        };  \r\n    }\r\n\r\n    componentWillMount() {\r\n        socket.emit('incoming data', '/replication/object');\r\n        socket.on(\"outgoing data\", data => this.setState({response_replication_object: data}, () => {\r\n            this.forceUpdate()\r\n            objx = []\r\n            objx.push(this.state.response_replication_object['replication_stats'])         \r\n            \r\n        }))        \r\n    }\r\n    \r\n    render() {\r\n        const items = objx.map((obj) => {\r\n            return(\r\n                <div>\r\n                    <div>\r\n                        rsync - {obj['rsync']}<br/>\r\n                        success - {obj['success']}<br/>\r\n                        start - {obj['start']}<br/>\r\n                        attempted - {obj['attempted']}<br/>\r\n                        remove - {obj['remove']}<br/>\r\n                        hashmatch - {obj['hashmatch']}<br/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n        return (\r\n            <Grid container spacing={1}>\r\n            <Grid item xs={12}>\r\n                <div style = {{backgroundColor:'#212121' }}>\r\n                    <Card >\r\n                    <CardContent style={{display: 'inline-block',fontSize: '14',margin: '0 2px',}}>\r\n                    <Typography  color=\"textSecondary\" gutterBottom>\r\n                    <h3>Object</h3>\r\n                    <b>Last replication</b> - {JSON.stringify(this.state.response_replication_object['replication_last'])}<br/>\r\n                    <b>Replication stats</b> -     \r\n                    {items}<br/>\r\n                    <b>Replication time</b> - {JSON.stringify(this.state.response_replication_object['replication_time'])}<br/> \r\n                    <b>object_replication_last</b> - {JSON.stringify(this.state.response_replication_object['object_replication_last'])}<br/>\r\n                    <b>object_replication_time</b> - {JSON.stringify(this.state.response_replication_object['object_replication_time'])}<br/> \r\n                    </Typography>\r\n                    </CardContent>\r\n                    </Card>\r\n                </div>\r\n                </Grid>\r\n                </Grid>\r\n        )  \r\n    }\r\n}\r\n\r\nexport default RReplication_object;\r\n","import React, {Component} from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\n\r\nlet socket = require('socket.io-client')('http://127.0.0.1:5002');\r\n\r\nclass RAuditor_account extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            response_auditor_account: \"\",\r\n        };  \r\n    }\r\n\r\n    componentWillMount() {\r\n        socket.emit('incoming data', '/auditor/account');\r\n        socket.on(\"outgoing data\", data => this.setState({response_auditor_account: data}, () => {\r\n            this.forceUpdate()\r\n            \r\n        }))        \r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Grid container spacing={1}>\r\n            <Grid item xs={12}>\r\n                <div style = {{backgroundColor:'#212121' }}>\r\n                    <Card >\r\n                    <CardContent style={{display: 'inline-block',fontSize: '14',margin: '0 2px',}}>\r\n                    <Typography  color=\"textSecondary\" gutterBottom>\r\n                    <h3>Account</h3>\r\n                    <b>account_audits_passed</b> - {JSON.stringify(this.state.response_auditor_account['account_audits_passed'])}<br/>\r\n                    <b>account_audits_failed</b> - {JSON.stringify(this.state.response_auditor_account['account_audits_failed'])}<br/>\r\n                    <b>account_auditor_pass_completed</b> - {JSON.stringify(this.state.response_auditor_account['account_auditor_pass_completed'])}<br/>\r\n                    <b>account_audits_since</b> - {JSON.stringify(this.state.response_auditor_account['account_audits_since'])}<br/>\r\n                    </Typography>\r\n                    </CardContent>\r\n                    </Card>\r\n                </div>\r\n                </Grid>\r\n                </Grid>\r\n            \r\n        )  \r\n    }\r\n}\r\n\r\nexport default RAuditor_account;\r\n","import React, {Component} from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\n\r\nlet socket = require('socket.io-client')('http://127.0.0.1:5002');\r\n\r\nclass RAuditor_container extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            response_auditor_container: \"\",\r\n        };  \r\n    }\r\n\r\n    componentWillMount() {\r\n        socket.emit('incoming data', '/auditor/container');\r\n        socket.on(\"outgoing data\", data => this.setState({response_auditor_container: data}, () => {\r\n            this.forceUpdate()\r\n            \r\n        }))        \r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Grid container spacing={1}>\r\n            <Grid item xs={12}>\r\n                <div style = {{backgroundColor:'#212121' }}>\r\n                    <Card >\r\n                    <CardContent style={{display: 'inline-block',fontSize: '14',margin: '0 2px',}}>\r\n                    <Typography  color=\"textSecondary\" gutterBottom>\r\n                    <h3>container</h3>\r\n                    <b>container_audits_passed</b> - {JSON.stringify(this.state.response_auditor_container['container_audits_passed'])}<br/>\r\n                    <b>container_audits_failed</b> - {JSON.stringify(this.state.response_auditor_container['container_audits_failed'])}<br/>\r\n                    <b>container_auditor_pass_completed</b> - {JSON.stringify(this.state.response_auditor_container['container_auditor_pass_completed'])}<br/>\r\n                    <b>container_audits_since</b> - {JSON.stringify(this.state.response_auditor_container['container_audits_since'])}<br/>\r\n                    </Typography>\r\n                    </CardContent>\r\n                    </Card>\r\n                </div>\r\n                </Grid>\r\n            </Grid>\r\n        )  \r\n    }\r\n}\r\n\r\nexport default RAuditor_container;\r\n","import React, {Component} from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\n\r\nlet socket = require('socket.io-client')('http://127.0.0.1:5002');\r\n\r\nclass RAuditor_object extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            response_auditor_object: \"\",\r\n        };  \r\n    }\r\n\r\n    componentWillMount() {\r\n        socket.emit('incoming data', '/auditor/object');\r\n        socket.on(\"outgoing data\", data => this.setState({response_auditor_object: data}, () => {\r\n            this.forceUpdate()\r\n            \r\n        }))        \r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Grid container spacing={1}>\r\n            <Grid item xs={12}>\r\n                <div style = {{backgroundColor:'#212121' }}>\r\n                    <Card >\r\n                    <CardContent style={{display: 'inline-block',fontSize: '14',margin: '0 2px',}}>\r\n                    <Typography  color=\"textSecondary\" gutterBottom>\r\n                    <h3>Object</h3>\r\n                    <b>object_auditor_stats_ALL</b> - {JSON.stringify(this.state.response_auditor_object['object_auditor_stats_ALL'])}<br/>\r\n                    <b>object_auditor_stats_ZBF</b> - {JSON.stringify(this.state.response_auditor_object['object_auditor_stats_ZBF'])}<br/>\r\n                    </Typography>\r\n                    </CardContent>\r\n                    </Card>\r\n                </div>\r\n            </Grid>\r\n            </Grid>\r\n            \r\n        )  \r\n    }\r\n}\r\n\r\nexport default RAuditor_object;\r\n","import React, {Component} from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nlet socket = require('socket.io-client')('http://127.0.0.1:5003');\r\n\r\nclass RUpdater_Container extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            response_Updater_Container: \"\",\r\n        };  \r\n    }\r\n\r\n    componentWillMount() {\r\n        socket.emit('incoming data', '/updater/container');\r\n        socket.on(\"outgoing data\", data => this.setState({response_Updater_Container: data}, () => {\r\n            this.forceUpdate()\r\n            \r\n        }))        \r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style = {{backgroundColor:'#212121' }}>\r\n                    <Card >\r\n                    <CardContent style={{display: 'inline-block',fontSize: '14',margin: '0 2px',}}>\r\n                    <Typography  color=\"textSecondary\" gutterBottom>\r\n                    <b>container_updater_sweep</b> - {JSON.stringify(this.state.response_Updater_Container['container_updater_sweep'])}<br/>\r\n                    </Typography>\r\n                    </CardContent>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        )  \r\n    }\r\n}\r\n\r\nexport default RUpdater_Container;\r\n","import React, {Component} from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nlet socket = require('socket.io-client')('http://127.0.0.1:5003');\r\n\r\nclass RUpdater_Object extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            response_Updater_Object: \"\",\r\n        };  \r\n    }\r\n\r\n    componentWillMount() {\r\n        socket.emit('incoming data', '/updater/object');\r\n        socket.on(\"outgoing data\", data => this.setState({response_Updater_Object: data}, () => {\r\n            this.forceUpdate()\r\n            \r\n        }))        \r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style = {{backgroundColor:'#212121' }}>\r\n                    <Card >\r\n                    <CardContent style={{display: 'inline-block',fontSize: '14',margin: '0 2px',}}>\r\n                    <Typography  color=\"textSecondary\" gutterBottom>\r\n                    <b>object_updater_sweep</b> - {JSON.stringify(this.state.response_Updater_Object['object_updater_sweep'])}<br/>\r\n                    </Typography>\r\n                    </CardContent>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        )  \r\n    }\r\n}\r\n\r\nexport default RUpdater_Object;\r\n","/* eslint-disable no-array-constructor */\r\nimport React, {Component} from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nlet socket = require('socket.io-client')('http://127.0.0.1:5003');\r\n\r\nclass RExpirer_Object extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            response_Expirer_Object: \"\",\r\n        };  \r\n    }\r\n\r\n    componentWillMount() {\r\n        socket.emit('incoming data', '/expirer/object');\r\n        socket.on(\"outgoing data\", data => this.setState({response_Expirer_Object: data}, () => {\r\n            this.forceUpdate()\r\n            \r\n        }))        \r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style = {{backgroundColor:'#212121' }}>\r\n                    <Card >\r\n                    <CardContent style={{display: 'inline-block',fontSize: '14',margin: '0 2px',}}>\r\n                    <Typography  color=\"textSecondary\" gutterBottom>\r\n                    <b>object_expiration_pass</b> - {JSON.stringify(this.state.response_Expirer_Object['object_expiration_pass'])}<br/>\r\n                    <b>expired_last_pass</b> - {JSON.stringify(this.state.response_Expirer_Object['expired_last_pass'])}<br/>\r\n                    </Typography>\r\n                    </CardContent>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        )  \r\n    }\r\n}\r\n\r\nexport default RExpirer_Object;\r\n","import React, {Component} from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nlet socket = require('socket.io-client')('http://127.0.0.1:5003');\r\n\r\nclass RVersion extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            response_version: \"\",\r\n        };  \r\n    }\r\n\r\n    componentWillMount() {\r\n        socket.emit('incoming data', '/version');\r\n        socket.on(\"outgoing data\", data => this.setState({response_version: data}, () => {\r\n            this.forceUpdate()\r\n            \r\n        }))        \r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style = {{backgroundColor:'#212121' }}>\r\n                    <Card >\r\n                    <CardContent style={{display: 'inline-block',fontSize: '14',margin: '0 2px',}}>\r\n                    <Typography  color=\"textSecondary\" gutterBottom>\r\n                    <b>version </b> - {JSON.stringify(this.state.response_version['version'])}<br/>\r\n                    </Typography>\r\n                    </CardContent>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        )  \r\n    }\r\n}\r\n\r\nexport default RVersion;\r\n","import React, {Component} from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nlet socket = require('socket.io-client')('http://127.0.0.1:5003');\r\n\r\nclass RTime extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            response_time: \"\",\r\n        };  \r\n    }\r\n\r\n    componentWillMount() {\r\n        socket.emit('incoming data', '/time');\r\n        socket.on(\"outgoing data\", data => this.setState({response_time: data}, () => {\r\n            this.forceUpdate()\r\n            \r\n        }))        \r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style = {{backgroundColor:'#212121' }}>\r\n                    <Card >\r\n                    <CardContent style={{display: 'inline-block',fontSize: '14',margin: '0 2px',}}>\r\n                    <Typography  color=\"textSecondary\" gutterBottom>\r\n                    <b>Time </b> - {JSON.stringify(this.state.response_time)}<br/>\r\n                    </Typography>\r\n                    </CardContent>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        )  \r\n    }\r\n}\r\n\r\nexport default RTime;\r\n","/* eslint-disable react/jsx-pascal-case */\r\nimport React from 'react';\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { withStyles } from '@material-ui/core/Styles';\r\nimport RLoad from './load';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport RMem2 from './mem2'\r\nimport RMounted from './mounted';\r\nimport RUnMounted from './UnMounted'\r\nimport RDiskUsage from './DiskUsage';\r\nimport RDriveAudit from './driveaudit';\r\nimport RRingMD5 from './RingMD5';\r\nimport RSwiftConfMD5 from './SwiftConfMD5';\r\nimport RQuarantined from './quarantined'\r\nimport RSockstat from './sockstat';\r\nimport RDevices from './devices';\r\nimport RAsync from './async';\r\nimport RReplication_account from './replication_account';\r\nimport RReplication_container from './replication_container';\r\nimport RReplication_object from './replication_object';\r\nimport RAuditor_account from './auditor_account';\r\nimport RAuditor_container from './auditor_container';\r\nimport RAuditor_object from './auditor_object';\r\nimport RUpdater_Container from './updater_container';\r\nimport RUpdater_Object from './updater_object';\r\nimport RExpirer_Object from './Object_expirer';\r\nimport RVersion from './version';\r\nimport RTime from './time'\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nclass ProfileTabs extends React.PureComponent {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = { \r\n          activeIndex: 0 }\r\n        }\r\n  handleChange = (_, activeIndex) => this.setState({ activeIndex })\r\n  render() {\r\n\r\n    const { activeIndex } = this.state;\r\n    return (\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexBasis:'200px'     \r\n        }}\r\n      >\r\n        <VerticalTabs\r\n          style={{borderRight:'1px solid grey',\r\n          borderBottom:'1px solid grey',\r\n          }}\r\n          value={activeIndex}\r\n          onChange={this.handleChange}\r\n        >           \r\n          <MyTab label='Load'/>\r\n          <MyTab label='Mem'/>\r\n          <MyTab label='Mounted'/>\r\n          <MyTab label='UnMounted'/>\r\n          <MyTab label='DiskUsage'/>\r\n          <MyTab label='DriveAudit'/>\r\n          <MyTab label='RingMD5'/>\r\n          <MyTab label='SwiftfMD5'/>\r\n          <MyTab label='quarantined'/>\r\n          <MyTab label='sockstat' />\r\n          <MyTab label='devices'/>\r\n          <MyTab label='async'/>\r\n          <MyTab label='replication'/>\r\n          <MyTab label='Auditor'/>\r\n          <MyTab label='Container Updater'/>\r\n          <MyTab label='Object Updater'/>\r\n          <MyTab label='Object Expirer'/>\r\n          <MyTab label='Version'/>\r\n          <MyTab label='time'/>\r\n        </VerticalTabs>\r\n\r\n        { activeIndex === 0 && <TabContainer >\r\n              <RLoad/>\r\n          </TabContainer> \r\n        }\r\n\r\n        { activeIndex === 1 && <TabContainer>\r\n              <RMem2/>\r\n          </TabContainer> \r\n        }\r\n        { activeIndex === 2 && <TabContainer>\r\n              <RMounted/>\r\n          </TabContainer> \r\n        }\r\n        { activeIndex === 3 && <TabContainer>\r\n              <RUnMounted/>\r\n         </TabContainer> \r\n        }\r\n        { activeIndex === 4 && <TabContainer>\r\n              <RDiskUsage/>\r\n          </TabContainer> \r\n        }\r\n        { activeIndex === 5 && <TabContainer>\r\n              <RDriveAudit/>\r\n          </TabContainer> \r\n        }\r\n        { activeIndex === 6 && <TabContainer>\r\n              <RRingMD5/>\r\n          </TabContainer> \r\n        }\r\n        { activeIndex === 7 && <TabContainer>\r\n              <RSwiftConfMD5/>\r\n          </TabContainer> \r\n        }\r\n        { activeIndex === 8 && <TabContainer>\r\n          <RQuarantined/>\r\n          </TabContainer> \r\n        }\r\n        { activeIndex === 9 && <TabContainer>\r\n          <RSockstat/>\r\n          </TabContainer> \r\n        }\r\n        { activeIndex === 10 && <TabContainer>\r\n          <RDevices/>\r\n          </TabContainer> \r\n        }\r\n        { activeIndex === 11 && <TabContainer>\r\n          <RAsync/>\r\n          </TabContainer> \r\n        }\r\n        { activeIndex === 12 && <TabContainer>\r\n          <div style={{maxWidth:'950px'}}>\r\n          <Grid container spacing={1} >\r\n            <Grid item xs={4}>\r\n              <RReplication_account/>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n            <RReplication_container/>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n            <RReplication_object/>\r\n            </Grid>\r\n          </Grid>\r\n          </div>\r\n          </TabContainer> \r\n        }\r\n        \r\n        { activeIndex === 13 && <TabContainer>\r\n          <div style={{maxWidth:'950px'}}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={5}>\r\n              <RAuditor_account/>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <RAuditor_container/>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <RAuditor_object/>\r\n            </Grid>\r\n            </Grid>\r\n          </div>\r\n          </TabContainer> \r\n        }\r\n        \r\n        { activeIndex === 14 && <TabContainer>\r\n          <RUpdater_Container/>\r\n          </TabContainer> \r\n        }\r\n        { activeIndex === 15 && <TabContainer>\r\n          <RUpdater_Object/> \r\n          </TabContainer> \r\n        }\r\n        { activeIndex === 16 && <TabContainer>\r\n          <RExpirer_Object/>\r\n          </TabContainer> \r\n        }\r\n        { activeIndex === 17 && <TabContainer>\r\n          <RVersion/> \r\n          </TabContainer> \r\n        }\r\n        { activeIndex === 18 && <TabContainer>\r\n          <RTime/>\r\n          </TabContainer> \r\n        }\r\n        \r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst VerticalTabs = withStyles(theme => ({\r\n  flexContainer: {\r\n    flexDirection: 'column',  \r\n    // backgroundColor:'black',\r\n    // color:'white'\r\n  },\r\n  indicator: {\r\n    display: 'none',\r\n  },\r\n}))(Tabs)\r\n\r\nconst MyTab = withStyles(theme => ({\r\n  selected: {\r\n    color: 'tomato',\r\n    // backgroundColor:'#BEBEBE',\r\n    border: '2px solid tomato',\r\n    borderRadius:'5px'\r\n  },\r\n  \r\n}))(Tab);\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 24 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport default ProfileTabs;","/* eslint-disable react/jsx-pascal-case */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Divider } from '@material-ui/core';\r\nimport ProfileTabs from './side'\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 0 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  appBar:{\r\n    backgroundColor:'black',\r\n  }\r\n}));\r\n\r\nfunction SimpleTabs() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  function handleChange(event, newValue) {\r\n    setValue(newValue);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root} >\r\n    <AppBar position=\"static\" className={classes.appBar} >\r\n        <Tabs value={value} onChange={handleChange}>\r\n          <Tab label=\"Recon\" />\r\n        </Tabs>\r\n      </AppBar>\r\n      <Divider/>\r\n      {value === 0 && <TabContainer><ProfileTabs/></TabContainer>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SimpleTabs;","import React from 'react';\nimport SimpleTabs from './sample'\n\nclass Home extends React.Component{\n    render(){\n        return(\n            <div>\n                <SimpleTabs/>\n            </div>\n        )\n    }\n}\n\nexport default Home","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Home />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}